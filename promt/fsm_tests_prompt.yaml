---
goal: >
  Все FSM-таблицы и Gherkin-тесты для критических пользовательских сценариев: race-condition, session expired, forbidden actions, полное покрытие всех edge-cases.
context:
  modules:
    - EquipmentTable + EquipmentDetailsModal + EquipmentFormModal
    - EventList + EventFormModal + EventDetails
    - Login/Logout Flow (login-page)
    - UsersPage
    - MountPointCreate + MountPointDetails
fsm_tests: |-
  ## EquipmentTable.vue + EquipmentFormModal.vue — FSM (Race-condition)

  | From         | Action             | To                | Trigger/Condition                                |
  |--------------|--------------------|-------------------|--------------------------------------------------|
  | Idle/Loading | detect_stale_data  | StaleData         | Сервер: версия изменилась (race-condition)       |
  | StaleData    | refresh            | Loading           | Пользователь обновляет страницу/данные           |
  | StaleData    | cancel             | Idle              | Пользователь отменяет действие                   |
  | Ready        | forbidden_delete   | Forbidden         | technician/video_engineer пытается удалить       |

  ### Edge-cases:
  - Race-condition: Изменения устарели, пользователь должен обновить страницу перед сохранением.
  - RBAC: Только manager/admin могут удалять оборудование.

  ### Gherkin-сценарий

  ```gherkin
  Feature: Equipment Management - Race Condition & RBAC

    Scenario: Editing equipment with outdated data
      Given the user opened the equipment editor modal
      And another user has changed the equipment on the server
      When the current user tries to save
      Then show a banner "Изменения устарели, обновите страницу"
      And block saving until refresh

    Scenario: Technician tries to delete equipment
      Given the user has role "technician"
      And is viewing equipment list
      When they try to delete equipment
      Then show ForbiddenState "Удаление запрещено для вашей роли"
      And hide delete button in UI
  ```

  ---

  ## EventList.vue + EventFormModal.vue — FSM (Race-condition + Archive)

  | From         | Action             | To                | Trigger/Condition                                |
  |--------------|--------------------|-------------------|--------------------------------------------------|
  | Idle/Loading | detect_stale_data  | StaleData         | Сервер: версия изменилась (race-condition)       |
  | StaleData    | refresh            | Loading           | Пользователь обновляет страницу/данные           |
  | StaleData    | cancel             | Idle              | Пользователь отменяет действие                   |
  | Ready        | archive_event      | Archived          | Мероприятие помечается is_archived = true        |
  | Archived     | restore_event      | Ready             | is_archived = false (восстановление)             |

  ### Edge-cases:
  - Race-condition: Изменения в мероприятии устарели, требуется обновить перед сохранением.
  - Archive: Удаление = архивирование через is_archived поле.

  ### Gherkin-сценарий

  ```gherkin
  Feature: Event Management - Race Condition & Archive

    Scenario: Editing event with outdated data
      Given the user opened the event form modal
      And another user has modified the event on the server
      When the current user tries to save
      Then show a banner "Изменения устарели, обновите страницу"
      And block saving until refresh

    Scenario: Archive and restore event
      Given user has manager/admin role
      When they archive an event
      Then event moves to "Архивные" tab
      And can be restored from archive
  ```

  ---

  ## login-page.vue — FSM (Session expired + Auth errors)

  | From       | Action            | To           | Trigger/Condition                               |
  |------------|-------------------|--------------|-------------------------------------------------|
  | Any        | session_expired   | Expired      | Сервер возвращает 401 (session expired)         |
  | Expired    | login             | Loading      | Пользователь заново авторизуется                |
  | Login      | auth_error        | AuthError    | Неверные креды (401) или сервер недоступен (500)|
  | AuthError  | retry             | Login        | Повторная попытка входа                          |

  ### Gherkin-сценарий

  ```gherkin
  Feature: Authentication Flow

    Scenario: User session expired
      Given the user is logged in
      When the session expires (401 from API)
      Then force logout and redirect to login page
      And show a banner "Сессия истекла, войдите снова"

    Scenario: Login with wrong credentials
      Given user is on login page
      When they enter wrong email/password
      Then show ErrorState "Неверный логин или пароль"
      And allow retry
  ```

  ---

  ## users-page.vue — FSM (forbidden deletion + admin-only access)

  | From     | Action            | To        | Trigger/Condition                                    |
  |----------|-------------------|-----------|------------------------------------------------------|
  | Ready    | try_delete        | Forbidden | Пользователь без прав (не admin) пытается удалить    |
  | Ready    | try_create        | Forbidden | Пользователь без прав (не admin) пытается создать    |
  | Loading  | access_denied     | Forbidden | 403 от API (RLS заблокировал доступ)                |

  ### Gherkin-сценарий

  ```gherkin
  Feature: User Management - Admin Only

    Scenario: Non-admin tries to delete user
      Given the user is on the user list page
      And the user has role "manager", "technician" or "video_engineer"
      When they attempt to access users page
      Then show ForbiddenState "Доступ только для администраторов"

    Scenario: Admin manages users
      Given user has "admin" role
      Then they can view, create, edit, delete users
      And see full users table with actions
  ```

  ---

  ## mount-point-create-page.vue — FSM (Event validation + RLS)

  | From       | Action                | To          | Trigger/Condition                                   |
  |------------|----------------------|-------------|-----------------------------------------------------|
  | Loading    | event_not_found      | Error404    | GET /events/:id возвращает 404                      |
  | Loading    | event_forbidden      | Forbidden   | 403 - пользователь не в responsible_engineers       |
  | Ready      | save_mount_point     | Success     | POST /mount-points успешно                          |
  | Ready      | validation_error     | ValidationError | Обязательные поля не заполнены                  |

  ### Gherkin-сценарий

  ```gherkin
  Feature: Mount Point Creation - Event Access Control

    Scenario: Create mount point for accessible event
      Given user is assigned to event as responsible engineer
      When they create mount point for that event
      Then mount point is created successfully
      And they are redirected to event details

    Scenario: Try to create mount point for restricted event
      Given user is NOT in event.responsible_engineers
      When they try to access mount point creation page
      Then show ForbiddenState "Нет доступа к этому мероприятию"
  ```

  ---

  ## EquipmentDetailsModal.vue — FSM (Modal states + Loading)

  | From       | Action              | To         | Trigger/Condition                                  |
  |------------|--------------------|-----------|----------------------------------------------------|
  | Opening    | load_success       | Ready     | GET /equipments/:id успешно                        |
  | Opening    | load_error         | Error     | 404/500 от API                                     |
  | Ready      | close_modal        | Closed    | Пользователь закрывает Modal                       |
  | Ready      | edit_equipment     | Edit      | Переход к редактированию                           |

  ### Gherkin-сценарий

  ```gherkin
  Feature: Equipment Details Modal

    Scenario: View equipment details
      Given user clicks on equipment in table
      When modal opens and loads data
      Then show complete equipment information
      And provide edit/close actions

    Scenario: Handle equipment not found
      Given equipment was deleted by another user
      When modal tries to load equipment details
      Then show ErrorState "Оборудование не найдено"
      And provide close action
  ```

  ---

  ## Общие Edge-Cases для всех компонентов

  ### Network & Connectivity:
  - **Offline Mode:** OfflineState компонент для всех страниц
  - **Slow Connection:** Индикаторы Loading состояния
  - **Request Timeout:** ErrorState с Retry функционалом

  ### RLS & RBAC Coverage:
  - **403 Forbidden:** ForbiddenState для ограниченного доступа
  - **401 Unauthorized:** Автоматический редирект на login
  - **Role-based UI:** Условное отображение кнопок/действий

  ### Data Consistency:
  - **Stale Data:** Индикация устаревших данных с кнопкой обновления
  - **Optimistic Updates:** Откат изменений при ошибках API
  - **Race Conditions:** Блокировка сохранения при конфликтах версий

attention: []
