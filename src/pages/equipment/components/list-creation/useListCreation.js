/**
 * useListCreation - EPR System
 * 
 * Composable –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ª–æ–≥–∏–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –≤—Å—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É, –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –≤—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
 * 
 * @param {string|null} editListId - ID —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤
 */

import { ref, computed } from 'vue'
import { getEquipmentListById } from '@/features/equipment/api/equipment-lists-api.js'

export function useListCreation(editListId = null) {
  // ===== –†–ï–ñ–ò–ú –†–ê–ë–û–¢–´ =====
  const isEditMode = computed(() => !!editListId)
  const listId = ref(editListId)
  // ===== –°–û–°–¢–û–Ø–ù–ò–ï –§–û–†–ú–´ =====
  const formData = ref({
    name: '',
    description: '',
    type: 'custom', // 'custom' | 'security'
    event_id: null,
    mount_point_id: null,
    equipment_ids: []
  })

  const formErrors = ref({})
  const createLoading = ref(false)
  const loadingListData = ref(false) // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // ===== –î–ê–ù–ù–´–ï –î–õ–Ø –ê–í–¢–û–ì–ï–ù–ï–†–ê–¶–ò–ò =====
  const selectedEventName = ref('')
  const selectedMountPointName = ref('')

  // ===== –í–´–ß–ò–°–õ–Ø–ï–ú–´–ï –°–í–û–ô–°–¢–í–ê =====
  
  // –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è security —Å–ø–∏—Å–∫–æ–≤ (–¢–û–õ–¨–ö–û –≤ —Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–Ω–∏—è)
  const autoGeneratedName = computed(() => {
    // –í —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ù–ï –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    if (isEditMode.value) {
      return ''
    }
    
    if (formData.value.type !== 'security' || 
        !formData.value.event_id || 
        !formData.value.mount_point_id) {
      return ''
    }
    
    return `${selectedMountPointName.value} - ${selectedEventName.value}`
  })

  // –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è security —Å–ø–∏—Å–∫–æ–≤ (–¢–û–õ–¨–ö–û –≤ —Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–Ω–∏—è)
  const autoGeneratedDescription = computed(() => {
    // –í —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ù–ï –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    if (isEditMode.value) {
      return ''
    }
    
    if (formData.value.type !== 'security' || 
        !formData.value.event_id || 
        !formData.value.mount_point_id) {
      return ''
    }
    
    return `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∞–∂–∞ "${selectedMountPointName.value}" –≤ —Ä–∞–º–∫–∞—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è "${selectedEventName.value}"`
  })

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–ø–∏—Å–∫–∞
  const canCreateList = computed(() => {
    console.log('üîç [useListCreation] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–ø–∏—Å–∫–∞:', {
      type: formData.value.type,
      name: formData.value.name,
      event_id: formData.value.event_id,
      mount_point_id: formData.value.mount_point_id,
      equipment_count: formData.value.equipment_ids.length
    })
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
    if (!formData.value.equipment_ids || formData.value.equipment_ids.length === 0) {
      console.log('‚ùå [useListCreation] –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è')
      return false
    }
    
    // –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ
    if (formData.value.type === 'custom') {
      const isReady = formData.value.name?.trim() && 
                     formData.value.type && 
                     formData.value.equipment_ids.length > 0
      console.log('üÜì [useListCreation] –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤:', isReady)
      return isReady
    }
    
    // –î–ª—è security —Å–ø–∏—Å–∫–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏ —Ç–æ—á–∫–∞ –º–æ–Ω—Ç–∞–∂–∞
    if (formData.value.type === 'security') {
      const isReady = formData.value.type && 
                     formData.value.event_id && 
                     formData.value.mount_point_id &&
                     formData.value.equipment_ids.length > 0
      console.log('üîí [useListCreation] Security —Å–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤:', isReady)
      return isReady
    }
    
    console.log('‚ùå [useListCreation] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–ø–∏—Å–∫–∞')
    return false
  })

  // –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
  const progressPercentage = computed(() => {
    let progress = 0
    
    // –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å: —Ç–∏–ø –≤—ã–±—Ä–∞–Ω
    if (formData.value.type) {
      progress += 20
      
      // –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
      if (formData.value.type === 'custom') {
        // –ù–∞–∑–≤–∞–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ = +25%
        if (formData.value.name?.trim()) progress += 25
        
        // –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ = +25%
        if (formData.value.equipment_ids.length > 0) progress += 25
        
        // –í—Å–µ –≥–æ—Ç–æ–≤–æ = +30%
        if (formData.value.name?.trim() && formData.value.equipment_ids.length > 0) {
          progress += 30
        }
      }
      
      // –î–ª—è security —Å–ø–∏—Å–∫–æ–≤
      else if (formData.value.type === 'security') {
        // –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤—ã–±—Ä–∞–Ω–æ = +20%
        if (formData.value.event_id) progress += 20
        
        // –¢–æ—á–∫–∞ –º–æ–Ω—Ç–∞–∂–∞ –≤—ã–±—Ä–∞–Ω–∞ = +20%
        if (formData.value.mount_point_id) progress += 20
        
        // –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ = +20%
        if (formData.value.equipment_ids.length > 0) progress += 20
        
        // –í—Å–µ –≥–æ—Ç–æ–≤–æ = +20%
        if (formData.value.event_id && 
            formData.value.mount_point_id && 
            formData.value.equipment_ids.length > 0) {
          progress += 20
        }
      }
    }
    
    return Math.min(progress, 100)
  })

  // ===== –ú–ï–¢–û–î–´ –í–ê–õ–ò–î–ê–¶–ò–ò =====
  
  const validateForm = () => {
    formErrors.value = {}
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ü–ï–†–í–´–ú –î–ï–õ–û–ú
    if (!formData.value.equipment_ids || formData.value.equipment_ids.length === 0) {
      formErrors.value.equipment_ids = '–°–ø–∏—Å–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
      console.log('‚ùå [validateForm] –°–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç–æ–π')
    }
    
    // –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
    if (formData.value.type === 'custom' && !formData.value.name?.trim()) {
      formErrors.value.name = '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
    }
    
    if (!formData.value.type) {
      formErrors.value.type = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–ø–∏—Å–∫–∞'
    }
    
    if (formData.value.type === 'security') {
      if (!formData.value.event_id) {
        formErrors.value.event_id = '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ'
      }
      if (!formData.value.mount_point_id) {
        formErrors.value.mount_point_id = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –º–æ–Ω—Ç–∞–∂–∞'
      }
    }
    
    const isValid = Object.keys(formErrors.value).length === 0
    console.log('üîç [validateForm] –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', isValid, formErrors.value)
    return isValid
  }

  // ===== –ú–ï–¢–û–î–´ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø =====
  
  const updateFormData = (newData) => {
    formData.value = { ...formData.value, ...newData }
    console.log('üìù [useListCreation] –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', formData.value)
  }

  const updateFormErrors = (newErrors) => {
    formErrors.value = { ...newErrors }
    console.log('‚ö†Ô∏è [useListCreation] –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', formErrors.value)
  }

  const updateSelectedEquipment = (equipmentIds) => {
    console.log('üì¶ [updateSelectedEquipment] –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', {
      input: equipmentIds,
      inputLength: equipmentIds?.length || 0,
      beforeUpdate: formData.value.equipment_ids?.length || 0
    })
    
    formData.value.equipment_ids = equipmentIds || []
    
    console.log('üì¶ [updateSelectedEquipment] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:', {
      finalLength: formData.value.equipment_ids?.length || 0,
      canCreate: formData.value.equipment_ids?.length > 0
    })
  }

  const updateLinkedData = ({ eventId, eventName, mountPointId, mountPointName }) => {
    if (eventId !== undefined) {
      formData.value.event_id = eventId
      selectedEventName.value = eventName || ''
    }
    
    if (mountPointId !== undefined) {
      formData.value.mount_point_id = mountPointId
      selectedMountPointName.value = mountPointName || ''
    }
    
    console.log('üîó [useListCreation] –°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', {
      event: selectedEventName.value,
      mountPoint: selectedMountPointName.value
    })
  }

  // ===== –ú–ï–¢–û–î–´ –û–ë–†–ê–ë–û–¢–ö–ò –ò–ó–ú–ï–ù–ï–ù–ò–ô =====
  
  const handleTypeChange = (newType) => {
    console.log('üîÑ [useListCreation] –ò–∑–º–µ–Ω–µ–Ω —Ç–∏–ø —Å–ø–∏—Å–∫–∞:', newType)
    
    if (newType === 'custom') {
      // –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è
      formData.value.event_id = null
      formData.value.mount_point_id = null
      selectedEventName.value = ''
      selectedMountPointName.value = ''
      
      // –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Å security –Ω–∞ custom –∏ –Ω–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è - –æ—á–∏—â–∞–µ–º
      if (!formData.value.name || formData.value.name.startsWith('–°–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è')) {
        formData.value.name = ''
        formData.value.description = ''
      }
    } else if (newType === 'security') {
      // –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ security - –æ—á–∏—â–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–Ω–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã)
      formData.value.name = ''
      formData.value.description = ''
    }
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞
    const newErrors = { ...formErrors.value }
    delete newErrors.type
    delete newErrors.name
    delete newErrors.description
    delete newErrors.event_id
    delete newErrors.mount_point_id
    formErrors.value = newErrors
  }

  // ===== –ú–ï–¢–û–î–´ –°–ë–†–û–°–ê =====
  
  const resetForm = () => {
    console.log('üßπ [useListCreation] –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é')
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    formData.value = {
      name: '',
      description: '',
      type: 'custom',
      event_id: null,
      mount_point_id: null,
      equipment_ids: []
    }
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    formErrors.value = {}
    
    // –û—á–∏—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
    createLoading.value = false
    
    // –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    selectedEventName.value = ''
    selectedMountPointName.value = ''
  }

  // ===== –ú–ï–¢–û–î–´ –î–õ–Ø –†–ï–ñ–ò–ú–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø =====
  
  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞
  const populateFormWithListData = async (listData, getEventName, getMountPointName, loadMountPoints) => {
    console.log('üìù [Edit] –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–∞–Ω–Ω—ã–º–∏:', listData)
    console.log('üìù [Edit] listData.name:', listData.name)
    console.log('üìù [Edit] –°—Ç—Ä—É–∫—Ç—É—Ä–∞ listData:', Object.keys(listData))
    console.log('üìù [Edit] –ö–†–ò–¢–ò–ß–ù–û - listData.equipment_ids:', listData.equipment_ids)
    console.log('üìù [Edit] –ö–†–ò–¢–ò–ß–ù–û - —Ç–∏–ø equipment_ids:', typeof listData.equipment_ids)
    console.log('üìù [Edit] –ö–†–ò–¢–ò–ß–ù–û - Array.isArray(equipment_ids):', Array.isArray(listData.equipment_ids))
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    formData.value.name = listData.name || ''
    formData.value.description = listData.description || ''
    formData.value.type = listData.type || 'custom'
    formData.value.event_id = listData.event_id || null
    formData.value.mount_point_id = listData.mount_point_id || null
    
    // –ü–∞—Ä—Å–∏–º equipment_ids –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ JSON
    let equipmentIds = listData.equipment_ids || []
    if (typeof equipmentIds === 'string') {
      try {
        equipmentIds = JSON.parse(equipmentIds)
        console.log('üìù [Edit] equipment_ids –±—ã–ª–æ —Å—Ç—Ä–æ–∫–æ–π, —Ä–∞—Å–ø–∞—Ä—Å–∏–ª–∏ –≤:', equipmentIds)
      } catch (error) {
        console.error('‚ùå [Edit] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ equipment_ids –∫–∞–∫ JSON:', error)
        equipmentIds = []
      }
    }
    
    formData.value.equipment_ids = Array.isArray(equipmentIds) ? equipmentIds : []
    
    console.log('üìù [Edit] –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è formData.name:', formData.value.name)
    console.log('üìù [Edit] –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è formData.type:', formData.value.type)
    console.log('üìù [Edit] –ö–†–ò–¢–ò–ß–ù–û - –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è formData.equipment_ids:', formData.value.equipment_ids)
    console.log('üìù [Edit] –ö–†–ò–¢–ò–ß–ù–û - –î–ª–∏–Ω–∞ equipment_ids:', formData.value.equipment_ids.length)
    
    // –î–ª—è security —Å–ø–∏—Å–∫–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è event –∏ mount point
    if (listData.type === 'security' && listData.event_id) {
      try {
        console.log('üîÑ [Edit] –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è security —Å–ø–∏—Å–∫–∞')
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        selectedEventName.value = getEventName(listData.event_id)
        console.log('üìÖ [Edit] –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:', selectedEventName.value)
        
        // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∞–∂–∞ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ—á–∫–∏ –¥–ª—è —Å–æ–±—ã—Ç–∏—è
        if (listData.mount_point_id && loadMountPoints) {
          await loadMountPoints(listData.event_id)
          selectedMountPointName.value = getMountPointName(listData.mount_point_id)
          console.log('üìç [Edit] –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∞–∂–∞:', selectedMountPointName.value)
        }
      } catch (error) {
        console.error('‚ùå [Edit] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏–π:', error)
      }
    }
    
    console.log('‚úÖ [Edit] –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞')
  }

  const loadListForEdit = async (id, dependencies = {}) => {
    if (!id) return
    
    try {
      loadingListData.value = true
      console.log('üîÑ [Edit] –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', id)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∞ –∏–∑ API
      const listData = await getEquipmentListById(id)
      console.log('üìä [Edit] –î–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω—ã:', listData)
      
      // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π
      await populateFormWithListData(
        listData, 
        dependencies.getEventName, 
        dependencies.getMountPointName,
        dependencies.loadMountPoints
      )
      
    } catch (error) {
      console.error('‚ùå [Edit] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞:', error)
      formErrors.value.general = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∞: ' + error.message
    } finally {
      loadingListData.value = false
    }
  }

  // ===== –ü–£–ë–õ–ò–ß–ù–´–ô API =====
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    formData,
    formErrors,
    createLoading,
    loadingListData, // –î–ª—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
    isEditMode,
    listId,
    
    // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    autoGeneratedName,
    autoGeneratedDescription,
    canCreateList,
    progressPercentage,
    
    // –ú–µ—Ç–æ–¥—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    validateForm,
    
    // –ú–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    updateFormData,
    updateFormErrors,
    updateSelectedEquipment,
    updateLinkedData,
    
    // –ú–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
    handleTypeChange,
    
    // –ú–µ—Ç–æ–¥—ã —Å–±—Ä–æ—Å–∞
    resetForm,
    
    // –ú–µ—Ç–æ–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    loadListForEdit,
    populateFormWithListData
  }
}