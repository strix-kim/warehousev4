// src/stores/auth-store.js
// Pinia store –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–æ–ª–µ–π.
// –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–æ–ª—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –≤–æ –≤—Å—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã. –ù–µ –∏–∑–º–µ–Ω—è–π—Ç–µ state –Ω–∞–ø—Ä—è–º—É—é –≤–Ω–µ actions!

import { defineStore } from 'pinia'
import { ref, computed } from 'vue'
import { supabase, fetchUsers } from '@/shared/api/supabase'
import { debounce } from 'lodash-es'

/**
 * –°—Ç—Ä—É–∫—Ç—É—Ä–∞ state:
 * - session: —Ç–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è Supabase (null, –µ—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
 * - user: –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (null, –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω)
 * - role: —Å—Ç—Ä–æ–∫–∞ —Å —Ä–æ–ª—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'admin', 'manager', ...)
 * - isLoading: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (true –≤–æ –≤—Ä–µ–º—è async-–æ–ø–µ—Ä–∞—Ü–∏–π)
 * - hasError: —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (null, –µ—Å–ª–∏ –≤—Å—ë –æ–∫)
 */
export const useAuthStore = defineStore('auth', () => {
  // --- State ---
  const session = ref(null)
  const user = ref(null)
  const role = ref(null)
  const isLoading = ref(false)
  const hasError = ref(null)
  const isInitialized = ref(false) // –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

  // --- Getters ---
  // –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  const isAuthenticated = computed(() => !!session.value && !!user.value)
  // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
  const isAdmin = computed(() => role.value === 'admin')

  // --- Actions ---

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –ø–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * –í—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async function init() {
    if (isInitialized.value) {
      console.log('üîÑ Auth: —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º')
      return
    }
    
    console.log('üöÄ Auth: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...')
    isLoading.value = true
    hasError.value = null
    try {
      const { data: { session: s } } = await supabase.auth.getSession()
      session.value = s
      if (s && s.user) {
        console.log('üîÑ Auth: –Ω–∞–π–¥–µ–Ω–∞ —Å–µ—Å—Å–∏—è, –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await fetchUser()
      } else {
        console.log('üîÑ Auth: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        user.value = null
        role.value = null
      }
      isInitialized.value = true
      console.log('‚úÖ Auth: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    } catch (e) {
      console.error('‚ùå Auth: –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', e.message)
      hasError.value = e.message || '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
    } finally {
      isLoading.value = false
    }
  }

  /**
   * –õ–æ–≥–∏–Ω —á–µ—Ä–µ–∑ email+password (–∏–ª–∏ –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ Supabase)
   * @param {string} email
   * @param {string} password
   */
  async function login(email, password) {
    isLoading.value = true
    hasError.value = null
    try {
      const { data, error } = await supabase.auth.signInWithPassword({ email, password })
      if (error) throw error
      session.value = data.session
      await fetchUser()
      isInitialized.value = true // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
      console.log('‚úÖ Auth: login –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
    } catch (e) {
      hasError.value = e.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞'
      throw e
    } finally {
      isLoading.value = false
    }
  }

  /**
   * –õ–æ–≥–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  async function logout() {
    isLoading.value = true
    hasError.value = null
    try {
      await supabase.auth.signOut()
      session.value = null
      user.value = null
      role.value = null
      isInitialized.value = false // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      console.log('üö™ Auth: logout –∑–∞–≤–µ—Ä—à–µ–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ')
    } catch (e) {
      hasError.value = e.message || '–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞'
    } finally {
      isLoading.value = false
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Ä–æ–ª—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users –ø–æ id –∏–∑ —Å–µ—Å—Å–∏–∏
   */
  async function fetchUser() {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    if (isLoading.value) {
      console.log('üîÑ Auth: fetchUser —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º')
      return
    }
    
    isLoading.value = true
    hasError.value = null
    try {
      const id = session.value?.user?.id
      if (!id) throw new Error('–ù–µ—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–º –∂–µ ID
      if (user.value && user.value.id === id) {
        console.log('üîÑ Auth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º fetchUsers()')
        return
      }
      
      console.log('üîÑ Auth: –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ API')
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ fetchUsers –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await fetchUsers()
      const u = users.find(u => u.id === id)
      if (!u) throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
      user.value = u
      role.value = u.role || null
      console.log('‚úÖ Auth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω:', u.email)
    } catch (e) {
      console.error('‚ùå Auth: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e.message)
      hasError.value = e.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
      user.value = null
      role.value = null
    } finally {
      isLoading.value = false
    }
  }
  
  // –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è fetchUser —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  const debouncedFetchUser = debounce(fetchUser, 300)

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏–ª–∏ —Å–º–µ–Ω—ã –ø—Ä–∞–≤)
   * @param {string} newRole
   */
  function setRole(newRole) {
    role.value = newRole
  }

  // --- Side-effects ---
  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ Supabase —Å –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–æ–º
  supabase.auth.onAuthStateChange((event, s) => {
    console.log('üîî Auth: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', event, s?.user?.id)
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –≤—ã–∑–æ–≤—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if (!isInitialized.value && event === 'INITIAL_SESSION') {
      console.log('üîÑ Auth: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º INITIAL_SESSION (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)')
      return
    }
    
    session.value = s
    if (s && s.user) {
      console.log('üîÑ Auth: –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      debouncedFetchUser()
    } else {
      console.log('üîÑ Auth: —Å–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω–∞, –æ—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      user.value = null
      role.value = null
    }
  })

  // --- –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ---
  return {
    session,
    user,
    role,
    isLoading,
    hasError,
    isInitialized,
    isAuthenticated,
    isAdmin,
    init,
    login,
    logout,
    fetchUser,
    setRole
  }
}) 